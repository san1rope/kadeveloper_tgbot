from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import Config


class CommonQuestions(CallbackData, prefix="cq"):
    question_id: int


class OrderActions(CallbackData, prefix="oa"):
    action: str
    order_id: int


class OrderActConfirmation(CallbackData, prefix="oac"):
    action: str
    order_id: int


class PaymentConfirmation(CallbackData, prefix="pc"):
    confirm: bool
    payment_id: int


class InlineMarkups:
    __btn_text_active_orders = "‚ùáÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã"
    __btn_text_back = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    __btn_text_order_feedbacks = "üìÑ –ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–∫—Ä—É—Ç–∫—É"
    __btn_text_enter_required_quantity = "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
    __btn_text_cancel = "üîò –û—Ç–º–µ–Ω–∏—Ç—å"
    __btn_text_continue = "‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"

    @classmethod
    async def start_menu(cls, how_to_start_btn: bool = False) -> InlineKeyboardMarkup:
        if how_to_start_btn:
            changeable_btn = InlineKeyboardButton(text="‚ÑπÔ∏è –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data="how_to_start")

        else:
            changeable_btn = InlineKeyboardButton(text=cls.__btn_text_active_orders, callback_data="active_orders")

        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    changeable_btn
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_order_feedbacks, callback_data="order_feedbacks")
                ],
                [
                    InlineKeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã", url=Config.TELEGRAM_CHANNEL),
                    InlineKeyboardButton(text="‚ùî –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")
                ]
            ]
        )

    @classmethod
    async def how_to_start(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text=cls.__btn_text_order_feedbacks, callback_data="order_feedbacks")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back, callback_data="back_from_how_to_start")
                ]
            ]
        )

    @classmethod
    async def order_period(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–î–µ–Ω—å", callback_data="1"),
                    InlineKeyboardButton(text="–ù–µ–¥–µ–ª—è", callback_data="7"),
                    InlineKeyboardButton(text="–ú–µ—Å—è—Ü", callback_data="30")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_enter_required_quantity, callback_data="write_quantity")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_cancel, callback_data="cancel")
                ]
            ]
        )

    @classmethod
    async def order_pf(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="5", callback_data="5"),
                    InlineKeyboardButton(text="10", callback_data="10"),
                    InlineKeyboardButton(text="20", callback_data="20"),
                    InlineKeyboardButton(text="30", callback_data="30"),
                    InlineKeyboardButton(text="50", callback_data="50")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_enter_required_quantity, callback_data="write_quantity")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back, callback_data="back")
                ]
            ]
        )

    @classmethod
    async def payment(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="üí¥ –û–ø–ª–∞—á–µ–Ω–æ", callback_data="payment_completed")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back, callback_data="back")
                ]
            ]
        )

    @classmethod
    async def order_created(cls):
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text=cls.__btn_text_active_orders, callback_data="active_orders")
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_continue, callback_data="continue_create_order")
                ]
            ]
        )

    @classmethod
    async def back(cls, callback_data: str) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text=cls.__btn_text_back, callback_data=callback_data)
                ]
            ]
        )

    @classmethod
    async def common_questions(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∞ –ü–§",
                                         callback_data=CommonQuestions(question_id=1).pack())
                ],
                [
                    InlineKeyboardButton(text="–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω –∑–∞ –Ω–∞–∫—Ä—É—Ç–∫—É –ü–§",
                                         callback_data=CommonQuestions(question_id=2).pack())
                ],
                [
                    InlineKeyboardButton(text="–õ—É—á—à–∞—è –º–µ—Ç–æ–¥–∏–∫–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏",
                                         callback_data=CommonQuestions(question_id=3).pack())
                ],
                [
                    InlineKeyboardButton(text="–ü–§ —Å—Ä–∞–∑—É –Ω–∞ –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è",
                                         callback_data=CommonQuestions(question_id=4).pack())
                ],
                [
                    InlineKeyboardButton(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url=Config.SUPPORT_TELEGRAM_URL)
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back, callback_data="back_from_questions_menu")
                ]
            ]
        )

    @classmethod
    async def order_actions(cls, order_id: int) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å",
                                         callback_data=OrderActions(order_id=order_id, action="delete").pack())
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back,
                                         callback_data="back_from_questions_menu")
                ]
            ]
        )

    @classmethod
    async def order_confirmation(cls, order_id: int, action: str) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                                         callback_data=OrderActConfirmation(action=action, order_id=order_id).pack())
                ],
                [
                    InlineKeyboardButton(text=cls.__btn_text_back,
                                         callback_data=OrderActConfirmation(action="back", order_id=order_id).pack())
                ]
            ]
        )

    @classmethod
    async def payment_confirmation(cls, payment_id: int) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ–ø–ª–∞—Ç—É",
                                         callback_data=PaymentConfirmation(confirm=True, payment_id=payment_id).pack())
                ],
                [
                    InlineKeyboardButton(text="üî¥ –û–ø–ª–∞—Ç—ã –Ω–µ –±—ã–ª–æ",
                                         callback_data=PaymentConfirmation(confirm=False, payment_id=payment_id).pack())
                ]
            ]
        )

    @classmethod
    async def payment_confirmed(cls) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text=cls.__btn_text_active_orders, callback_data="active_orders")
                ],
                [
                    InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É", callback_data="__btn_text_order_feedbacks")
                ],
                [
                    InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="back_from_order")
                ]
            ]
        )
